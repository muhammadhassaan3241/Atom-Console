function cov_1bpszzmjf3(){var path="C:\\Users\\a\\Atom-Console-Backend\\src\\services\\dashboard.js";var hash="0a6c2cdf1ba7102c1a09f910054622fe6fb5b762";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\a\\Atom-Console-Backend\\src\\services\\dashboard.js",statementMap:{"0":{start:{line:1,column:28},end:{line:1,column:59}},"1":{start:{line:2,column:23},end:{line:2,column:58}},"2":{start:{line:3,column:26},end:{line:3,column:64}},"3":{start:{line:5,column:0},end:{line:94,column:2}},"4":{start:{line:7,column:4},end:{line:38,column:5}},"5":{start:{line:8,column:29},end:{line:8,column:31}},"6":{start:{line:9,column:24},end:{line:11,column:7}},"7":{start:{line:12,column:6},end:{line:27,column:7}},"8":{start:{line:13,column:25},end:{line:13,column:46}},"9":{start:{line:14,column:8},end:{line:20,column:11}},"10":{start:{line:15,column:10},end:{line:19,column:13}},"11":{start:{line:21,column:8},end:{line:26,column:10}},"12":{start:{line:28,column:6},end:{line:33,column:8}},"13":{start:{line:35,column:17},end:{line:35,column:36}},"14":{start:{line:36,column:20},end:{line:36,column:42}},"15":{start:{line:37,column:6},end:{line:37,column:31}},"16":{start:{line:42,column:4},end:{line:65,column:5}},"17":{start:{line:43,column:30},end:{line:45,column:7}},"18":{start:{line:46,column:23},end:{line:46,column:50}},"19":{start:{line:47,column:6},end:{line:54,column:7}},"20":{start:{line:48,column:8},end:{line:53,column:10}},"21":{start:{line:55,column:6},end:{line:60,column:8}},"22":{start:{line:62,column:17},end:{line:62,column:36}},"23":{start:{line:63,column:20},end:{line:63,column:42}},"24":{start:{line:64,column:6},end:{line:64,column:31}},"25":{start:{line:69,column:4},end:{line:92,column:5}},"26":{start:{line:70,column:35},end:{line:72,column:7}},"27":{start:{line:73,column:23},end:{line:73,column:55}},"28":{start:{line:74,column:6},end:{line:81,column:7}},"29":{start:{line:75,column:8},end:{line:80,column:10}},"30":{start:{line:82,column:6},end:{line:87,column:8}},"31":{start:{line:89,column:17},end:{line:89,column:36}},"32":{start:{line:90,column:20},end:{line:90,column:42}},"33":{start:{line:91,column:6},end:{line:91,column:31}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:16},end:{line:6,column:17}},loc:{start:{line:6,column:48},end:{line:39,column:3}},line:6},"1":{name:"(anonymous_1)",decl:{start:{line:14,column:26},end:{line:14,column:27}},loc:{start:{line:14,column:42},end:{line:20,column:9}},line:14},"2":{name:"(anonymous_2)",decl:{start:{line:41,column:16},end:{line:41,column:17}},loc:{start:{line:41,column:48},end:{line:66,column:3}},line:41},"3":{name:"(anonymous_3)",decl:{start:{line:68,column:22},end:{line:68,column:23}},loc:{start:{line:68,column:54},end:{line:93,column:3}},line:68}},branchMap:{"0":{loc:{start:{line:12,column:6},end:{line:27,column:7}},type:"if",locations:[{start:{line:12,column:6},end:{line:27,column:7}},{start:{line:12,column:6},end:{line:27,column:7}}],line:12},"1":{loc:{start:{line:47,column:6},end:{line:54,column:7}},type:"if",locations:[{start:{line:47,column:6},end:{line:54,column:7}},{start:{line:47,column:6},end:{line:54,column:7}}],line:47},"2":{loc:{start:{line:74,column:6},end:{line:81,column:7}},type:"if",locations:[{start:{line:74,column:6},end:{line:81,column:7}},{start:{line:74,column:6},end:{line:81,column:7}}],line:74}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0a6c2cdf1ba7102c1a09f910054622fe6fb5b762"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1bpszzmjf3=function(){return actualCoverage;};}return actualCoverage;}cov_1bpszzmjf3();const fileManagerInstance=(cov_1bpszzmjf3().s[0]++,require("../repositories/file"));const{statusCode}=(cov_1bpszzmjf3().s[1]++,require("../constants/header-code"));const{headerMessage}=(cov_1bpszzmjf3().s[2]++,require("../constants/header-message"));cov_1bpszzmjf3().s[3]++;module.exports={protocolList:async(resellerId,callback)=>{cov_1bpszzmjf3().f[0]++;cov_1bpszzmjf3().s[4]++;try{const protocolsArray=(cov_1bpszzmjf3().s[5]++,[]);const protocols=(cov_1bpszzmjf3().s[6]++,await fileManagerInstance.readFile("connectedProtocolWise.json"));cov_1bpszzmjf3().s[7]++;if(protocols!==null&protocols!==undefined){cov_1bpszzmjf3().b[0][0]++;const jsonData=(cov_1bpszzmjf3().s[8]++,JSON.parse(protocols));cov_1bpszzmjf3().s[9]++;jsonData.body.map(async list=>{cov_1bpszzmjf3().f[1]++;cov_1bpszzmjf3().s[10]++;protocolsArray.push({tunnel_name:list.TunnelTypeName,total_unique_users:list.TotalUniqueUsers,total_users:list.TotalUsers});});cov_1bpszzmjf3().s[11]++;return callback(protocolsArray,statusCode.success,"1","VPN protocol list found successfully");}else{cov_1bpszzmjf3().b[0][1]++;}cov_1bpszzmjf3().s[12]++;return callback(protocolsArray,statusCode.notFound,"0","VPN protocol list not found");}catch(error){let code=(cov_1bpszzmjf3().s[13]++,statusCode.notFound);let message=(cov_1bpszzmjf3().s[14]++,headerMessage.notFound);cov_1bpszzmjf3().s[15]++;return{code,message};}},sourceContry:async(resellerId,callback)=>{cov_1bpszzmjf3().f[2]++;cov_1bpszzmjf3().s[16]++;try{const sourceCountries=(cov_1bpszzmjf3().s[17]++,await fileManagerInstance.readFile("getCurrentLoadwrtSources.json"));const jsonData=(cov_1bpszzmjf3().s[18]++,JSON.parse(sourceCountries));cov_1bpszzmjf3().s[19]++;if(jsonData!==null&jsonData!==undefined){cov_1bpszzmjf3().b[1][0]++;cov_1bpszzmjf3().s[20]++;return callback(jsonData.body.slice(0,12),statusCode.success,"1","VPN source country found list successfully");}else{cov_1bpszzmjf3().b[1][1]++;}cov_1bpszzmjf3().s[21]++;return callback(jsonData,statusCode.notFound,"0","VPN source country list not found");}catch(error){let code=(cov_1bpszzmjf3().s[22]++,statusCode.notFound);let message=(cov_1bpszzmjf3().s[23]++,headerMessage.notFound);cov_1bpszzmjf3().s[24]++;return{code,message};}},destinationCountry:async(resellerId,callback)=>{cov_1bpszzmjf3().f[3]++;cov_1bpszzmjf3().s[25]++;try{const destinationCountries=(cov_1bpszzmjf3().s[26]++,await fileManagerInstance.readFile("getCurrentLoadwrtDestination.json"));const jsonData=(cov_1bpszzmjf3().s[27]++,JSON.parse(destinationCountries));cov_1bpszzmjf3().s[28]++;if(jsonData!==null&jsonData!==undefined){cov_1bpszzmjf3().b[2][0]++;cov_1bpszzmjf3().s[29]++;return callback(jsonData.body.slice(0,12),statusCode.success,"1","VPN destination country list found successfully");}else{cov_1bpszzmjf3().b[2][1]++;}cov_1bpszzmjf3().s[30]++;return callback(jsonData,statusCode.notFound,"0","VPN destination country list not found");}catch(error){let code=(cov_1bpszzmjf3().s[31]++,statusCode.notFound);let message=(cov_1bpszzmjf3().s[32]++,headerMessage.notFound);cov_1bpszzmjf3().s[33]++;return{code,message};}}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,